[{"/Users/derek/Desktop/MCS/project/tom2/src/index.js":"1","/Users/derek/Desktop/MCS/project/tom2/src/App.js":"2","/Users/derek/Desktop/MCS/project/tom2/src/Header/index.js":"3","/Users/derek/Desktop/MCS/project/tom2/src/Body.js":"4","/Users/derek/Desktop/MCS/project/tom2/src/Home/Home.js":"5","/Users/derek/Desktop/MCS/project/tom2/src/Footer/Footer.js":"6","/Users/derek/Desktop/MCS/project/tom2/src/Tom2/Tom2.js":"7","/Users/derek/Desktop/MCS/project/tom2/src/Exchange/Exchange.js":"8","/Users/derek/Desktop/MCS/project/tom2/src/Tom2/Tom2Stake.js":"9","/Users/derek/Desktop/MCS/project/tom2/src/Header/Setting.js":"10","/Users/derek/Desktop/MCS/project/tom2/src/Exchange/Pool/AddLiquidity.js":"11","/Users/derek/Desktop/MCS/project/tom2/src/Exchange/Pool/LiquidityTokenModal.js":"12","/Users/derek/Desktop/MCS/project/tom2/src/utils/utils.js":"13","/Users/derek/Desktop/MCS/project/tom2/src/utils/hook/useInput.js":"14","/Users/derek/Desktop/MCS/project/tom2/src/assets/Responsive.js":"15","/Users/derek/Desktop/MCS/project/tom2/src/config.js":"16","/Users/derek/Desktop/MCS/project/tom2/src/utils/metaMask.js":"17","/Users/derek/Desktop/MCS/project/tom2/src/Exchange/ConfirmModal.js":"18","/Users/derek/Desktop/MCS/project/tom2/src/Exchange/LoadingModal.js":"19","/Users/derek/Desktop/MCS/project/tom2/src/Exchange/Pool.js":"20","/Users/derek/Desktop/MCS/project/tom2/src/Exchange/Pool/ImportPool.js":"21","/Users/derek/Desktop/MCS/project/tom2/src/utils/web3Utils.js":"22","/Users/derek/Desktop/MCS/project/tom2/src/Exchange/Pool/RemoveLiquidity.js":"23","/Users/derek/Desktop/MCS/project/tom2/src/Exchange/Swap/Swap.js":"24","/Users/derek/Desktop/MCS/project/tom2/src/Exchange/Swap/SwapConfirm.js":"25","/Users/derek/Desktop/MCS/project/tom2/src/Tom2/StakeModal.js":"26"},{"size":579,"mtime":1609750266435,"results":"27","hashOfConfig":"28"},{"size":2097,"mtime":1609752457757,"results":"29","hashOfConfig":"28"},{"size":2742,"mtime":1609751575312,"results":"30","hashOfConfig":"28"},{"size":1058,"mtime":1609223629753,"results":"31","hashOfConfig":"28"},{"size":2222,"mtime":1609752208873,"results":"32","hashOfConfig":"28"},{"size":348,"mtime":1608704944201,"results":"33","hashOfConfig":"28"},{"size":3120,"mtime":1609500697809,"results":"34","hashOfConfig":"28"},{"size":398,"mtime":1609391585051,"results":"35","hashOfConfig":"28"},{"size":5978,"mtime":1609748666431,"results":"36","hashOfConfig":"28"},{"size":5525,"mtime":1609411550822,"results":"37","hashOfConfig":"28"},{"size":15791,"mtime":1609752736863,"results":"38","hashOfConfig":"28"},{"size":5160,"mtime":1609732519627,"results":"39","hashOfConfig":"28"},{"size":1576,"mtime":1609556181677,"results":"40","hashOfConfig":"28"},{"size":317,"mtime":1609223042819,"results":"41","hashOfConfig":"28"},{"size":325,"mtime":1609223042817,"results":"42","hashOfConfig":"28"},{"size":59915,"mtime":1609493979560,"results":"43","hashOfConfig":"28"},{"size":1034,"mtime":1609424928212,"results":"44","hashOfConfig":"28"},{"size":2343,"mtime":1609740172027,"results":"45","hashOfConfig":"28"},{"size":2340,"mtime":1609733229964,"results":"46","hashOfConfig":"28"},{"size":6844,"mtime":1609731185006,"results":"47","hashOfConfig":"28"},{"size":6493,"mtime":1609307571778,"results":"48","hashOfConfig":"28"},{"size":24135,"mtime":1609749320057,"results":"49","hashOfConfig":"28"},{"size":7912,"mtime":1609556951034,"results":"50","hashOfConfig":"28"},{"size":9590,"mtime":1609745236496,"results":"51","hashOfConfig":"28"},{"size":3126,"mtime":1609395039811,"results":"52","hashOfConfig":"28"},{"size":4203,"mtime":1609748234886,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2ifagq",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/derek/Desktop/MCS/project/tom2/src/index.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/App.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/Header/index.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/Body.js",[],["109","110"],"/Users/derek/Desktop/MCS/project/tom2/src/Home/Home.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/Footer/Footer.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/Tom2/Tom2.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/Exchange/Exchange.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/Tom2/Tom2Stake.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/Header/Setting.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/Exchange/Pool/AddLiquidity.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/Exchange/Pool/LiquidityTokenModal.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/utils/utils.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/utils/hook/useInput.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/assets/Responsive.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/config.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/utils/metaMask.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/Exchange/ConfirmModal.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/Exchange/LoadingModal.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/Exchange/Pool.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/Exchange/Pool/ImportPool.js",["111"],"import React, { useCallback, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'react-router-dom'\nimport { myPositionCheck } from 'utils/web3Utils'\nimport LiquidityTokenModal from './LiquidityTokenModal'\nimport { positionLocalStorage } from 'utils/utils'\n\nconst NotFoundBox = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    &.found {\n        margin-top: 20px;\n        & > p:last-of-type {\n            font-weight: 500;\n            color: #eab640;\n            cursor: pointer;\n            &:hover {\n                text-decoration: underline;\n            }\n        }\n    }\n`\n\nconst ImportPool = ({ history }) => {\n    const [pairData, setPairData] = useState(null)\n    const [addLiquidityInputA, setAddLiquidityInputA] = useState({\n        name: '',\n        symbol: 'Select',\n        balance: '',\n        decimals: '',\n        totalSupply: '',\n        tokenAddress: '',\n        show: false\n    })\n    const [addLiquidityInputB, setAddLiquidityInputB] = useState({\n        name: '',\n        symbol: '',\n        balance: '',\n        decimals: '',\n        totalSupply: '',\n        tokenAddress: '',\n        show: false\n    })\n\n    const checkPairContract = useCallback(async () => {\n        if (addLiquidityInputA.tokenAddress && addLiquidityInputB.tokenAddress) {\n            setPairData(await myPositionCheck(addLiquidityInputA.tokenAddress, addLiquidityInputB.tokenAddress))\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [addLiquidityInputA.tokenAddress, addLiquidityInputB.tokenAddress])\n\n    useEffect(() => {\n        checkPairContract()\n    }, [checkPairContract])\n\n    const onClickManagePool = () => {\n        positionLocalStorage.setMyPositionList(addLiquidityInputA.tokenAddress, addLiquidityInputB.tokenAddress)\n        history.push('/exchange/pool')\n    }\n\n    return (\n        <>\n            <div className=\"wrapper\">\n                <div className=\"sub_wrap liqu_wrap sub_wrap05\">\n                    <div className=\"tit\">\n                        <Link to={'/exchange/pool'} className=\"prev\"><img src=\"/images/ico/ico_arrow_back.png\" alt=\"뒤로가기\" /></Link>\n                        <span>Import Pool</span>\n                        <a href=\"#;\" className=\"q_ico\">\n                            <div className=\"help_box\">Find a token…</div>\n                        </a>\n                    </div>\n                    <div className=\"import_wrap\">\n                        <div className=\"select\" onClick={() => setAddLiquidityInputA({ ...addLiquidityInputA, show: true })}>\n                            <p className=\"txt\"><a href=\"#token_pop\" className=\"pop_call\">\n                                {/* <img src=\"/images/ico/ico_eth01.png\" alt=\"\" /> */}\n                                {addLiquidityInputA.symbol}</a>\n                            </p>\n                            <ul>\n                                <li><a href=\"#;\"><img src=\"/images/ico/ico_eth01.png\" alt=\"\" />ETH1</a></li>\n                                <li><a href=\"#;\"><img src=\"/images/ico/ico_eth01.png\" alt=\"\" />ETH2</a></li>\n                                <li><a href=\"#;\"><img src=\"/images/ico/ico_eth01.png\" alt=\"\" />ETH3</a></li>\n                            </ul>\n                        </div>\n                        <div className=\"select select02\" onClick={() => setAddLiquidityInputB({ ...addLiquidityInputB, show: true })}>\n                            <p className=\"txt\"><a href=\"#token_pop\" className=\"pop_call\">{addLiquidityInputB.symbol || 'Select a Token'}</a></p>\n                            <ul>\n                                <li><a href=\"#;\"><img src=\"/images/ico/ico_eth02.png\" alt=\"\" />USDT1</a></li>\n                                <li><a href=\"#;\"><img src=\"/images/ico/ico_eth02.png\" alt=\"\" />USDT2</a></li>\n                                <li><a href=\"#;\"><img src=\"/images/ico/ico_eth02.png\" alt=\"\" />USDT3</a></li>\n                            </ul>\n                        </div>\n                    </div>\n                    {pairData !== null && (\n                        <>\n                            {pairData ? (\n                                <>\n                                    <div className=\"position\">\n                                        <p>Your position</p>\n                                        <dl>\n                                            <dt className=\"bold etu\">\n                                                {/* <span className=\"icon01\"><img src=\"/images/ico/ico_eth01.png\" alt=\"\" /></span> */}\n                                                {/* <span className=\"icon02\"><img src=\"/images/ico/ico_eth02.png\" alt=\"\" /></span> */}\n                                                {` ${addLiquidityInputA.symbol}/${addLiquidityInputB.symbol}`}\n                                            </dt>\n                                            <dd className=\"bold\">{pairData.lpTokenView.toPrecision(12)}</dd>\n                                            <dt>{addLiquidityInputA.symbol}</dt>\n                                            <dd>{pairData.token0ViewValue.toPrecision(12)}</dd>\n                                            <dt>{addLiquidityInputB.symbol}</dt>\n                                            <dd>{pairData.token1ViewValue.toPrecision(12)}</dd>\n                                        </dl>\n                                    </div>\n                                    <NotFoundBox className='found'>\n                                        <p>Pool Found!</p>\n                                        <p onClick={onClickManagePool}>Manage this pool.</p>\n                                    </NotFoundBox>\n                                </>\n                            ) : (\n                                    <NotFoundBox className=\"position\">\n                                        <p>Not Found</p>\n                                    </NotFoundBox>\n                                )}\n                        </>\n                    )}\n                </div>\n            </div>\n            {addLiquidityInputA.show && (\n                <LiquidityTokenModal addLiquidityInput={addLiquidityInputA} setAddLiquidityInput={setAddLiquidityInputA} />\n            )}\n            {addLiquidityInputB.show && (\n                <LiquidityTokenModal addLiquidityInput={addLiquidityInputB} setAddLiquidityInput={setAddLiquidityInputB} />\n            )}\n        </>\n    )\n}\n\nexport default ImportPool","/Users/derek/Desktop/MCS/project/tom2/src/utils/web3Utils.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/Exchange/Pool/RemoveLiquidity.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/Exchange/Swap/Swap.js",["112"],"\nimport React, { useCallback, useEffect, useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'react-router-dom'\n\nimport LoadingModal from '../LoadingModal'\nimport LiquidityTokenModal from '../Pool/LiquidityTokenModal'\nimport SwapConfirm from './SwapConfirm'\nimport { swapCheckPair, swapPreviewPrice, swapRequestTx } from 'utils/web3Utils'\nimport { convertDecimal } from 'utils/utils'\n\nconst MaxBtn = styled.strong`\n    display: inline-block;\n    width: 30px;\n    height: 20px;\n    margin: 3px 6px 0 0;\n    color: #eab645;\n    font-size: 10px;\n    text-align: center;\n    line-height: 20px;\n    border-radius: 4px;\n    cursor: pointer;\n    background: rgba(234,182,64,0.2);\n`\n\n\nconst Swap = () => {\n    const [showModal, setShowModal] = useState({\n        reversePrice: false,\n        confirm: false,\n        loading: false,\n        success: false\n    })\n    const [tokenA, setTokenA] = useState({\n        name: '',\n        symbol: 'Select',\n        amount: '',\n        balance: '',\n        decimals: '',\n        totalSupply: '',\n        tokenAddress: '',\n        show: false\n    })\n    const [tokenB, setTokenB] = useState({\n        name: '',\n        symbol: 'Select',\n        amount: '',\n        balance: '',\n        decimals: '',\n        totalSupply: '',\n        tokenAddress: '',\n        show: false\n    })\n    const [calcSwapData, setCalcSwapData] = useState(null)\n\n    const initialFunc = () => {\n        setShowModal({\n            reversePrice: false,\n            confirm: false,\n            loading: false,\n            success: false\n        })\n        setTokenA({\n            name: '',\n            symbol: 'Select',\n            amount: '',\n            balance: '',\n            decimals: '',\n            totalSupply: '',\n            tokenAddress: '',\n            show: false\n        })\n        setTokenB({\n            name: '',\n            symbol: 'Select',\n            amount: '',\n            balance: '',\n            decimals: '',\n            totalSupply: '',\n            tokenAddress: '',\n            show: false\n        })\n        setCalcSwapData(null)\n    }\n\n    const onChangeAmount = (e, state, setState) => {\n        const { target: { value: amount } } = e\n\n        if (amount === '') {\n            setTokenA({ ...tokenA, amount: '' })\n            setTokenB({ ...tokenB, amount: '' })\n        } else {\n            setState({\n                ...state,\n                amount\n            })\n        }\n\n    }\n\n    const swapPreview = useCallback(async () => {\n        if (tokenA.tokenAddress && tokenB.tokenAddress) {\n            if (tokenA.amount > 0) {\n                const calcText = await swapPreviewPrice(tokenA, tokenB)\n\n                setTokenB({\n                    ...tokenB,\n                    amount: calcText.amount\n                })\n                setCalcSwapData(calcText)\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tokenA.amount, tokenA.tokenAddress, tokenB.tokenAddress])\n\n    useEffect(() => {\n        swapPreview()\n    }, [swapPreview])\n\n    const onClickSwap = async () => {\n        setShowModal({ showModal, loading: true })\n        try {\n            await swapRequestTx(tokenA, tokenB)\n            setShowModal({ showModal, loading: true, success: true })\n        } catch (error) {\n            setShowModal({ showModal, loading: false })\n        }\n    }\n\n    return (\n        <div className=\"wrapper\">\n            <div className=\"sub_wrap sub_wrap03\">\n                <ul>\n                    <li className=\"on\"><Link to={'/exchange/swap'}>Swap</Link></li>\n                    <li><Link to={'/exchange/pool'}>Pool</Link></li>\n                </ul>\n                <div className=\"exchange\">\n                    <div className=\"top\">\n                        <div className=\"fl from\">\n                            <span>from</span>\n                            <p>{`Balance : ${convertDecimal(tokenA.balance, tokenA.decimals)} `}</p>\n                        </div>\n                        <div className=\"fr max\">\n                            <input id=\"Create_0_Preview\" type=\"text\" placeholder={'0.0'} value={tokenA.amount} onChange={e => onChangeAmount(e, tokenA, setTokenA)} disabled={tokenA.symbol === 'Select'} />\n                            <div>\n                                {tokenA.amount !== convertDecimal(tokenA.balance, tokenA.decimals) && Number(tokenA.balance) ? (\n                                    <MaxBtn onClick={() => setTokenA({ ...tokenA, amount: convertDecimal(tokenA.balance, tokenA.decimals) })} >Max</MaxBtn>\n                                ) : null}\n                                <a href=\"#token_pop\" className=\"eth pop_call\" onClick={() => setTokenA({ ...tokenA, show: true })}>{tokenA.symbol}</a>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"btm\">\n                        <div className=\"fl\">\n                            <span>To</span>\n                            <p>{`Balance : ${convertDecimal(tokenB.balance, tokenB.decimals)} `}</p>\n                        </div>\n                        <div className=\"fr\">\n                            <input id=\"Create_1_Preview\" type=\"text\" placeholder={'0.0'} defaultValue={tokenB.amount} readOnly />\n                            <div className=\"token\">\n                                <a href=\"#token_pop\" className=\"pop_call\" onClick={() => setTokenB({ ...tokenB, show: true })} >{tokenB.symbol}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"re_price\">\n                    <span>Price</span>\n                    {calcSwapData !== null && (\n                        <>\n                            {showModal.reversePrice ? (\n                                <p>{`${calcSwapData.tokenPriceB} ${tokenB.symbol} per ${tokenA.symbol}`}<a href=\"#;\" className=\"re_ico\" onClick={() => setShowModal({ ...showModal, reversePrice: false })}> </a></p>\n                            ) : (\n                                    <p>{`${calcSwapData.tokenPriceA} ${tokenA.symbol} per ${tokenB.symbol}`}<a href=\"#;\" className=\"re_ico\" onClick={() => setShowModal({ ...showModal, reversePrice: true })}> </a></p>\n                                )}\n                        </>\n                    )}\n                </div>\n                <button className={`enter enter02 ${(tokenA.amount && tokenB.amount) && (tokenA.amount <= tokenA.balance * Math.pow(0.1, tokenA.decimals) && tokenB.amount <= tokenB.balance * Math.pow(0.1, tokenB.decimals)) && calcSwapData ? 'on' : 'disabled'}`} onClick={() => setShowModal({ ...showModal, confirm: true })}>{calcSwapData || calcSwapData === null ? 'Swap' : 'There is no pair pool'}</button>\n            </div>\n            {tokenA.amount && tokenB.amount && calcSwapData !== null ? (\n                <div className=\"analy\">\n                    <dl>\n                        {/* <dt className=\"mark\">Price</dt>\n                        <dd>605.00 USDT / ETH <a href=\"#;\" className=\"re_ico\"> </a></dd> */}\n                        <dt>Minimum received\n                    <a href=\"#;\" className=\"q_ico\">\n                                <div className=\"help_box help_right\">\n                                    Find a token…\n                        </div>\n                            </a>\n                        </dt>\n                        <dd>{`${calcSwapData.minimumReceived} ${tokenB.symbol}`}</dd>\n                        <dt>Price Impact\n                    <a href=\"#;\" className=\"q_ico\">\n                                <div className=\"help_box help_right\">\n                                    Find a token…\n                        </div>\n                            </a>\n                        </dt>\n                        <dd className=\"green\">\n                            {`${(calcSwapData.impactRate * 100).toPrecision(12)}%`}</dd>\n                        <dt>Liquidity Provider Fee\n                    <a href=\"#;\" className=\"q_ico\">\n                                <div className=\"help_box help_right\">\n                                    Find a token…\n                        </div>\n                            </a>\n                        </dt>\n                        <dd>{`${tokenA.amount * 0.003} ${tokenA.symbol}`}</dd>\n                    </dl>\n                    {/* <div className=\"route\">\n                        <p>route</p>\n                        <ul>\n                            <li><span>WETH</span></li>\n                            <li><span>WETH</span></li>\n                            <li><span>WETH</span></li>\n                        </ul>\n                        <a href=\"#;\">View pair analytics</a>\n                    </div> */}\n                </div>\n            ) : null}\n            {showModal.confirm && (\n                <SwapConfirm tokenA={tokenA} tokenB={tokenB} calcSwapData={calcSwapData} showModal={showModal} setShowModal={setShowModal} onClickSwap={onClickSwap} />\n            )}\n            {showModal.loading && (\n                <LoadingModal init={{ reversePrice: false, confirm: false, loading: false, success: false }} initialFunc={initialFunc} showModal={showModal} setShowModal={setShowModal} />\n            )}\n            {tokenA.show && (\n                <LiquidityTokenModal addLiquidityInput={tokenA} setAddLiquidityInput={setTokenA} />\n            )}\n            {tokenB.show && (\n                <LiquidityTokenModal addLiquidityInput={tokenB} setAddLiquidityInput={setTokenB} />\n            )}\n        </div>\n    )\n}\n\nexport default Swap","/Users/derek/Desktop/MCS/project/tom2/src/Exchange/Swap/SwapConfirm.js",[],"/Users/derek/Desktop/MCS/project/tom2/src/Tom2/StakeModal.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":6,"column":10,"nodeType":"119","messageId":"120","endLine":6,"endColumn":24},{"ruleId":"117","severity":1,"message":"121","line":9,"column":10,"nodeType":"119","messageId":"120","endLine":9,"endColumn":23},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'convertDecimal' is defined but never used.","Identifier","unusedVar","'swapCheckPair' is defined but never used.","no-global-assign","no-unsafe-negation"]